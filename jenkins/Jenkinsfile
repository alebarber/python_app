pipeline {
    agent any  // Usa cualquier nodo disponible para ejecutar el pipeline

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:2-alpine'
                    args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                sh 'apk update && apk add docker'
                // sh 'rc-update add docker boot'
                // sh 'service docker start'
                sh 'docker info'
                sh 'python --version'
                
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'qnib/pytest'  // Imagen Docker para ejecutar las pruebas
                    args '-v /var/run/docker.sock:/var/run/docker.sock'  // Montaje de Docker socket
                }
            }
            steps {
                script {
                    // Ejecuta las pruebas con pytest
                    sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
                }
            }
            post {
                always {
                    junit '**/test-reports/*.xml'  // Publica los resultados de las pruebas
                }
            }
        }

        stage('Deliver') {
            agent {
                docker {
                    image 'ubuntu:20.04'  // Usamos Ubuntu como base
                    args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                sh '''
                    echo "Iniciando contenedor..."
                    
                    # Actualizar paquetes
                    apt-get update
                    
                    # Instalar dependencias necesarias
                    apt-get install -y python3 python3-pip
                    
                    # Instalar PyInstaller
                    pip3 install pyinstaller
                    
                    # Verificar que PyInstaller est√© instalado
                    pyinstaller --version
                    
                    # Compilar el ejecutable
                    cd sources
                    pyinstaller --onefile add2vals.py
                    
                    # Verificar que se haya creado el ejecutable
                    ls dist/add2vals
                    
                    # Copiar el ejecutable al directorio de trabajo
                    cp dist/add2vals ../add2vals
                    
                    echo "Ejecutable compilado correctamente."
                '''
                
                // Archivar los artefactos
                archiveArtifacts artifacts: 'sources/dist/add2vals'
            }
        }
    }  // Cierre de stages
}  // Cierre de pipeline
